{
  "dataset_reader": {
    "type": "friction_q",
    "lazy": false,
    "filter_type2": false,
    "replace_world_entities": true,
    "single_lf_extractor_aligned": true,
    "lf_syntax": "with_type_2_general",
    "question_token_indexers": {
      "tokens": {
        "type": "single_id",
        "lowercase_tokens": true
      }
    }
  },
  "validation_dataset_reader": {
    "type": "friction_q",
    "lazy": false,
    "filter_type2": false,
    "replace_world_entities": true,
    "skip_world_alignment": true,
    "lf_syntax": "with_type_2_general",
    "question_token_indexers": {
      "tokens": {
        "type": "single_id",
        "lowercase_tokens": true
      }
    }
  },
  "vocabulary": {
    "non_padded_namespaces": ["actions"]
  },
  "train_data_path": "/Users/tafjord/data/generalqr-v1-taglbwe/generalqr-v1-taglbwe-train.jsonl",
  "validation_data_path": "/Users/tafjord/data/generalqr-v1-taglbwe/generalqr-v1-taglbwe-dev.jsonl",
  "model": {
    "type": "friction_q_parser",
    "question_embedder": {
      "tokens": {
        "type": "embedding",
        "pretrained_file": "/Users/tafjord/data/glove/glove.6B.100d.txt.gz",
        "embedding_dim": 100,
        "trainable": false
      }
    },
    "action_embedding_dim": 50,
    "encoder": {
      "type": "lstm",
      "input_size": 100,
      "hidden_size": 50,
      "bidirectional": false,
      "num_layers": 1
    },
    "entity_encoder": {
      "type": "boe",
      "embedding_dim": 100,
      "averaged": true
    },
    "decoder_beam_search": {
      "beam_size": 5
    },
    "max_decoding_steps": 30,
    "attention_function": {"type": "dot_product"},
    "dropout": 0.2
  },
  "iterator": {
    "type": "basic",
    "batch_size" : 1
  },
  "trainer": {
    "num_epochs": 100,
    "patience": 40,
    "validation_metric": "+parse_acc",
    "learning_rate_scheduler":  {
      "type": "reduce_on_plateau",
      "factor": 0.5,
      "mode": "max",
      "patience": 10
    },
    "num_serialized_models_to_keep": 2,
    "cuda_device": -1,
    "optimizer": {
      "type": "adam"
    }
  }
}
